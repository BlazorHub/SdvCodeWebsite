@using SdvCode.Models.User
@using Microsoft.AspNetCore.Identity
@using SdvCode.ViewModels.Post.ViewModels
@using SdvCode.Areas.Administration.Models.Enums
@using X.PagedList.Mvc.Core
@using X.PagedList.Mvc.Common
@using X.PagedList
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model PostViewModel

<div class="post">
    <div class="post-image-wrapper">
        <img src=@Model.ImageUrl class="img-responsive" alt="post cover image" />
        @if (Model.CreatedOn == Model.UpdatedOn)
        {
            <span class="blog-date">
                <a asp-area="" asp-controller="Post" asp-action="Index" asp-route-id="@Model.Id">
                    @Model.CreatedOn.ToString("MMMM dd, yyyy")
                </a>
            </span>
        }
        else
        {
            <span class="blog-date">
                <a asp-area="" asp-controller="Post" asp-action="Index" asp-route-id="@Model.Id">
                    @Model.UpdatedOn.ToString("MMMM dd, yyyy")
                </a>
            </span>
        }
    </div>
    <div class="post-header clearfix">
        <h2 class="post-title">
            <a asp-area="" asp-controller="Post" asp-action="Index" asp-route-id="@Model.Id">@Model.Title</a>
        </h2>

        @if ((User.IsInRole(Roles.Administrator.ToString()) || User.IsInRole(Roles.Editor.ToString()) || Model.IsAuthor == true) && Model.ApplicationUser.IsBlocked == false)
        {
            <a asp-area="" asp-controller="Blog" asp-action="EditPost" asp-route-id="@Model.Id" class="btn btn-info"><i class="fas fa-edit"></i> Edit Post</a>
            <a asp-area="" asp-controller="Blog" asp-action="DeletePost" asp-route-id="@Model.Id" class="btn btn-danger"><i class="fas fa-trash-alt"></i> Delete Post</a>
        }
        @if (SignInManager.IsSignedIn(User))
        {
            <div class="dropdown">
                <a class="btn btn-success dropbtn"><i class="far fa-heart"></i> @Model.Likes Likes</a>
                <div class="dropdown-content">
                    @foreach (var liker in Model.Likers)
                    {
                        <a asp-area="" asp-controller="Profile" asp-action="Index" asp-route-username="@liker.UserName">
                            @if (liker.ImageUrl == null)
                            {
                                <img class="likerAvatar" src="~/images/NoAvatarProfileImage.png" alt="avatar">
                            }
                            else
                            {
                                <img class="likerAvatar" src=@liker.ImageUrl alt="avatar">
                            }

                            @liker.FirstName @liker.LastName (@@@liker.UserName)
                        </a>
                    }
                </div>
            </div>
        }
        <div class="post-meta">
            <span class="post-meta-author">
                Posted on
                <span class="post-meta-cats"> @Model.CreatedOn.ToString("dd-MMMM-yyyy")</span>
                by
                <a asp-area="" asp-controller="Profile" asp-action="Index" asp-route-username="@Model.ApplicationUser.UserName"> @Model.ApplicationUser.UserName</a>
            </span>
            <span class="post-meta-cats">in <a asp-area="" asp-controller="Category" asp-action="Index" asp-route-id="@Model.Category.Id"> @Model.Category.Name</a></span>
            <div class="pull-right">
                <span class="post-meta-comments">
                    @if (SignInManager.IsSignedIn(User))
                    {
                        <a href="#">
                            <i class="fa fa-comment-o"></i> @Model.Comments.Count
                        </a>
                    }
                    else
                    {
                        <h><i class="fa fa-comment-o"></i> @Model.Comments.Count comments</h>
                    }
                </span>
                <span class="post-meta-hits">
                    @if (Model.IsLiked == true)
                    {
                        <a asp-area="" asp-controller="Post" asp-action="UnlikePost" asp-route-id="@Model.Id">
                            <i class="fas fa-thumbs-down"></i> Unlike
                        </a>
                    }
                    else
                    {
                        @if (Model.IsLiked == false && SignInManager.IsSignedIn(User))
                        {
                            <a asp-area="" asp-controller="Post" asp-action="LikePost" asp-route-id="@Model.Id">
                                <i class="fas fa-thumbs-up"></i> Like
                            </a>
                        }
                        else
                        {
                            <h><i class="fas fa-thumbs-up"></i> @Model.Likes likes</h>
                        }
                    }
                </span>
            </div>
        </div>
    </div>
    <div class="post-body">
        <p>@Html.Raw(Model.ShortContent)</p>
    </div>
    <div class="post-footer">
        <a asp-area="" asp-controller="Post" asp-action="Index" asp-route-id="@Model.Id" class="btn btn-primary">
            Continue Reading <i class="fas fa-angle-double-right">&nbsp;</i>
        </a>
        @if (SignInManager.IsSignedIn(User))
        {
            @if (!Model.IsFavourite)
            {
                <a asp-area="" asp-controller="Post" asp-action="AddToFavorite" asp-route-id="@Model.Id" style="float: right" class="btn btn-primary">
                    <i class="far fa-heart"></i> Add to favorite
                </a>
            }
            else
            {
                <a asp-area="" asp-controller="Post" asp-action="RemoveFromFavorite" asp-route-id="@Model.Id" style="float: right" class="btn btn-primary">
                    <i class="fas fa-eraser"></i> Remove from favorite
                </a>
            }
        }
    </div>
</div>