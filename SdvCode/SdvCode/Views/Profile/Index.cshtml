@using Microsoft.AspNetCore.Identity
@using SdvCode.Areas.Administration.Models.Enums
@using SdvCode.ViewModels.Profile
@using SdvCode.Models.Enums
@using SdvCode.Models.User
@using X.PagedList.Mvc.Core
@using X.PagedList.Mvc.Common
@using X.PagedList
@model ProfileViewModel
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = $"{Model.ApplicationUser.Username.Substring(0, 1).ToUpper() + Model.ApplicationUser.Username.Substring(1, Model.ApplicationUser.Username.Length - 1)} Profile";
}

<div class="user-profile">
    <div class="profile-header-background">
        @if (Model.ApplicationUser.CoverImageUrl == null)
        {
            <img src="~/images/userProfileCityBackgroundImage.jpg" alt="Profile Header Background">
        }
        else
        {
            <img src=@Model.ApplicationUser.CoverImageUrl alt="Profile Header Background">
        }
    </div>
    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <div class="profile-info-left">
                    <div class="text-center">
                        @if (Model.ApplicationUser.ImageUrl == null)
                        {
                            <img src="~/images/NoAvatarProfileImage.png" alt="Avatar" class="avatar img-circle" style="width: 270px; height: 250px">
                        }
                        else
                        {
                            <img src=@Model.ApplicationUser.ImageUrl alt="Avatar" class="avatar img-circle" style="width: 270px; height: 250px">
                        }
                        <h2>@Model.ApplicationUser.FirstName @Model.ApplicationUser.LastName</h2>
                        @if (Model.ApplicationUser.IsBlocked == true)
                        {
                            <span class="label label-danger" style="font-size: medium; padding: 7px 40px 7px 40px"><i class="fas fa-user-slash"> Banned</i></span>
                        }
                        <h5>@@@Model.ApplicationUser.Username</h5>
                    </div>
                    <div class="action-buttons">
                        <div class="row">
                            <div class="col-xs-6">
                                @if (User.Identity.Name == Model.ApplicationUser.Username)
                                {
                                    <a asp-area="Identity" asp-page="/Account/Manage/Index" class="btn btn-primary btn-info btn-block"><i class="fas fa-edit"></i> Edit Profile</a>
                                }
                                else
                                {
                                    @if (!Model.ApplicationUser.IsFollowed)
                                    {
                                        <a asp-area="" asp-controller="Profile" asp-action="Follow" asp-route-username="@Model.ApplicationUser.Username" class="btn btn-success btn-block"><i class="fas fa-plus-circle"></i> Follow</a>
                                    }
                                    else
                                    {
                                        <a asp-area="" asp-controller="Profile" asp-action="Unfollow" asp-route-username="@Model.ApplicationUser.Username" class="btn btn-danger btn-block"><i class="fas fa-minus-circle"></i> Unfollow</a>
                                    }
                                }
                            </div>
                            <div class="col-xs-6">
                                @if (User.Identity.Name == Model.ApplicationUser.Username)
                                {
                                    <a asp-area="" asp-controller="Profile" asp-action="AllUsers" class="btn btn-primary btn-block"><i class="fas fa-users"></i> All Users</a>
                                }
                                else
                                {
                                    <a asp-area="PrivateChat" asp-controller="PrivateChat" asp-action="Index" asp-route-username="@Model.ApplicationUser.Username" class="btn btn-primary btn-block">Message</a>
                                }
                            </div>
                        </div>
                        @if (User.Identity.Name == Model.ApplicationUser.Username && Model.ApplicationUser.ActionsCount > 0)
                        {
                            <div style="margin-top: 15px">
                                <a asp-controller="Profile" asp-action="DeleteActivityHistory" asp-route-username="@User.Identity.Name" class="btn btn-danger btn-block"><i class="fas fa-trash"></i> Delete Activity History</a>
                            </div>
                        }
                        @if (User.Identity.Name == Model.ApplicationUser.Username && !Model.HasAdmin)
                        {
                            <div style="margin-top: 15px">
                                <a asp-area="" asp-controller="Profile" asp-action="MakeYourselfAdmin" asp-route-username="@User.Identity.Name" class="btn btn-info btn-block"><i class="fas fa-user-shield"></i> Make Yourself Administrator</a>
                            </div>
                        }
                        @if (User.Identity.Name == Model.ApplicationUser.Username && User.IsInRole(Roles.Administrator.ToString()))
                        {
                            <div style="margin-top: 15px">
                                <a asp-area="Administration" asp-controller="Dashboard" asp-action="Index" class="btn btn-success btn-block"><i class="fas fa-user-shield"></i> Administration Panel</a>
                            </div>
                        }
                        else
                        {
                            @if (User.Identity.Name == Model.ApplicationUser.Username && User.IsInRole(Roles.Editor.ToString()))
                            {
                                <div style="margin-top: 15px">
                                    <a asp-area="Editor" asp-controller="AddCategory" asp-action="Index" class="btn btn-success btn-block"><i class="fas fa-feather-alt"></i> Create Category</a>
                                </div>
                            }
                        }
                    </div>
                    <div class="section">
                        <h3>About Me</h3>
                        <p>@Model.ApplicationUser.AboutMe</p>
                    </div>
                    <div class="section">
                        <h3>Roles</h3>
                        @foreach (var role in Model.ApplicationUser.Roles)
                        {
                            @if (role.Name == Roles.Administrator.ToString())
                            {
                                <span class="label label-success">@role.Name</span>
                            }
                            @if (role.Name == Roles.Editor.ToString())
                            {
                                <span class="label label-primary">@role.Name</span>

                            }
                            @if (role.Name == Roles.Author.ToString())
                            {
                                <span class="label label-warning">@role.Name</span>

                            }
                            @if (role.Name == Roles.Contributor.ToString())
                            {
                                <span class="label label-info">@role.Name</span>

                            }
                            @if (role.Name == Roles.Subscriber.ToString())
                            {
                                <span class="label label-default">@role.Name</span>

                            }
                        }
                    </div>
                    <div class="section">
                        <h3>Personal Data</h3>
                        @if (Model.ApplicationUser.Country != null)
                        {
                            <p><i class="fas fa-flag"></i> Country: @Model.ApplicationUser.Country.Name</p>
                        }
                        @if (Model.ApplicationUser.State != null)
                        {
                            <p><i class="far fa-star"></i> State: @Model.ApplicationUser.State.Name</p>
                        }
                        @if (Model.ApplicationUser.City != null)
                        {
                            <p><i class="fas fa-building"></i> City: @Model.ApplicationUser.City.Name</p>
                        }
                        @if (Model.ApplicationUser.ZipCode != null)
                        {
                            <p><i class="fas fa-mail-bulk"></i> Zip Code: @Model.ApplicationUser.ZipCode.Code</p>
                        }
                        @if (Model.ApplicationUser.BirthDate != null)
                        {
                            <p><i class="fas fa-birthday-cake"></i> @Model.ApplicationUser.BirthDate.ToString("dd-MMMM-yyyy")</p>
                        }
                        @if (Model.ApplicationUser.PhoneNumber != null)
                        {
                            <p>
                                <i class="fas fa-phone"></i> (@Model.ApplicationUser.CountryCode.ToString().Split("_")[0]) @Model.ApplicationUser.PhoneNumber

                                @if (User.Identity.Name == Model.ApplicationUser.Username && Model.ApplicationUser.PhoneNumberConfirmed == false)
                                {
                                    <a asp-area="Identity" asp-page="/Account/VerifyPhone">Verify Phone</a>
                                }
                            </p>
                        }
                    </div>
                    <div class="section">
                        <h3>Social</h3>
                        <ul class="list-unstyled">
                            @if (Model.ApplicationUser.GitHubUrl != null)
                            {
                                <li><a href=@Model.ApplicationUser.GitHubUrl target="_blank"><i class="fab fa-github"></i> GitHub</a></li>
                            }
                            @if (Model.ApplicationUser.StackoverflowUrl != null)
                            {
                                <li><a href=@Model.ApplicationUser.StackoverflowUrl target="_blank"><i class="fab fa-stack-overflow"></i> StackOverflow</a></li>
                            }
                            @if (Model.ApplicationUser.FacebookUrl != null)
                            {
                                <li><a href=@Model.ApplicationUser.FacebookUrl target="_blank"><i class="fab fa-facebook-square"></i> Facebook</a></li>
                            }
                            @if (Model.ApplicationUser.LinkedinUrl != null)
                            {
                                <li><a href=@Model.ApplicationUser.LinkedinUrl target="_blank"><i class="fab fa-linkedin"></i> LinkedIn</a></li>
                            }
                            @if (Model.ApplicationUser.TwitterUrl != null)
                            {
                                <li><a href=@Model.ApplicationUser.TwitterUrl target="_blank"><i class="fab fa-twitter-square"></i> Twitter</a></li>
                            }
                            @if (Model.ApplicationUser.InstagramUrl != null)
                            {
                                <li><a href=@Model.ApplicationUser.InstagramUrl target="_blank"><i class="fab fa-instagram"></i> Instagram</a></li>
                            }
                        </ul>
                    </div>
                    <div class="section">
                        <h3>Blog</h3>
                        <p>
                            <a asp-area="" asp-controller="UserPosts" asp-action="Index" asp-route-username="@Model.ApplicationUser.Username" asp-route-filter=@UserPostsFilter.Created.ToString()>
                                <i class="fas fa-blog"></i> @Model.CreatedPosts Blog Posts
                            </a>
                        </p>
                        <p>
                            <a asp-area="" asp-controller="UserPosts" asp-action="Index" asp-route-username="@Model.ApplicationUser.Username" asp-route-filter="@UserPostsFilter.Liked.ToString()">
                                <i class="fas fa-thumbs-up"></i> @Model.LikedPosts Posts Likes
                            </a>
                        </p>
                        <p>
                            <a>
                                <i class="far fa-comments"></i> 30 Posts Comments
                            </a>
                        </p>
                    </div>
                </div>
            </div>
            <div class="col-md-8">

                @if (TempData["Success"] != null)
                {
                    <div class="container-fluid" style="margin-top: 10px;">
                        <div class="alert alert-success alert-dismissible" role="alert">
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            @TempData["Success"]
                        </div>
                    </div>
                }
                <div class="profile-info-right">
                    <ul class="nav nav-pills nav-pills-custom-minimal custom-minimal-bottom" id="myTab">
                        <li role="presentation" class="@(Model.ActiveTab == ProfileTab.Activities ? "active" : string.Empty )"><a asp-route-username="@Model.ApplicationUser.Username" asp-route-tab="Activities" asp-route-page="@Model.Page" asp-action="SwitchToTabs">ACTIVITIES</a></li>
                        <li role="presentation" class="@(Model.ActiveTab == ProfileTab.Followers ? "active" : string.Empty )"><a asp-route-username="@Model.ApplicationUser.Username" asp-route-tab="Followers" asp-route-page="@Model.Page" asp-action="SwitchToTabs">FOLLOWERS</a></li>
                        <li role="presentation" class="@(Model.ActiveTab == ProfileTab.Following ? "active" : string.Empty )"><a asp-route-username="@Model.ApplicationUser.Username" asp-route-tab="Following" asp-route-page="@Model.Page" asp-action="SwitchToTabs">FOLLOWING</a></li>
                        <li role="presentation" class="@(Model.ActiveTab == ProfileTab.Favorites ? "active" : string.Empty )"><a asp-route-username="@Model.ApplicationUser.Username" asp-route-tab="Favorites" asp-route-page="@Model.Page" asp-action="SwitchToTabs">FAVORITES</a></li>
                        @if (User.IsInRole(Roles.Administrator.ToString()) || User.IsInRole(Roles.Editor.ToString()) || User.Identity.Name == Model.ApplicationUser.Username)
                        {
                            <li role="presentation" class="@(Model.ActiveTab == ProfileTab.PendingPosts ? "active" : string.Empty )"><a asp-route-username="@Model.ApplicationUser.Username" asp-route-tab="PendingPosts" asp-route-page="@Model.Page" asp-action="SwitchToTabs">PENDING</a></li>
                            <li role="presentation" class="@(Model.ActiveTab == ProfileTab.BannedPosts ? "active" : string.Empty )"><a asp-route-username="@Model.ApplicationUser.Username" asp-route-tab="BannedPosts" asp-route-page="@Model.Page" asp-action="SwitchToTabs">BANNED</a></li>
                        }
                    </ul>
                    <div class="tab-content">
                        @switch (Model.ActiveTab)
                        {
                            case ProfileTab.Activities:
                                @await Component.InvokeAsync("Activities", new { username = Model.ApplicationUser.Username, page = Model.Page });
                                break;
                            case ProfileTab.Following:
                                @await Component.InvokeAsync("Following", new { username = Model.ApplicationUser.Username, page = Model.Page });
                                break;
                            case ProfileTab.Followers:
                                @await Component.InvokeAsync("Followers", new { username = Model.ApplicationUser.Username, page = Model.Page });
                                break;
                            case ProfileTab.Favorites:
                                @await Component.InvokeAsync("Favorites", new { username = Model.ApplicationUser.Username, page = Model.Page });
                                break;
                            case ProfileTab.PendingPosts:
                                @if (User.IsInRole(Roles.Administrator.ToString()) || User.IsInRole(Roles.Editor.ToString()) || User.Identity.Name == Model.ApplicationUser.Username)
                                {
                                    @await Component.InvokeAsync("PendingPosts", new { username = Model.ApplicationUser.Username, page = Model.Page });
                                }
                                break;
                            case ProfileTab.BannedPosts:
                                @if (User.IsInRole(Roles.Administrator.ToString()) || User.IsInRole(Roles.Editor.ToString()) || User.Identity.Name == Model.ApplicationUser.Username)
                                {
                                    @await Component.InvokeAsync("BannedPosts", new { username = Model.ApplicationUser.Username, page = Model.Page });
                                }
                                break;
                            default:
                                break;
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>