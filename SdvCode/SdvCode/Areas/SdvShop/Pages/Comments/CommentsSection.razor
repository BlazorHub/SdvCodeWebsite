@if (this.allComments != null && this.inputModel != null)
{
    <div class="tab-pane fade"
         id="contact"
         role="tabpanel"
         aria-labelledby="contact-tab">
        <div class="row">
            <div class="col-lg-6">
                <CommentsList AllComments="@this.allComments"></CommentsList>
            </div>
            <div class="col-lg-6">
                <div class="review_box">
                    <h4>Post a comment</h4>
                    <EditForm Model="@this.inputModel" OnValidSubmit="@this.CreateComment" class="row contact_form">
                        <DataAnnotationsValidator />
                        <div class="col-md-12">
                            <div class="form-group">
                                <InputText id="fullName" @bind-Value="this.inputModel.FullName" type="text" class="form-control" placeholder="Your Name" />
                                <ValidationMessage For="@(() => this.inputModel.FullName)" />
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <InputText id="email" @bind-Value="this.inputModel.Email" type="email" class="form-control" placeholder="Email Address" />
                                <ValidationMessage For="@(() => this.inputModel.Email)" />
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <InputText id="phoneNumber" @bind-Value="this.inputModel.PhoneNumber" type="text" class="form-control" placeholder="Phone Number" />
                                <ValidationMessage For="@(() => this.inputModel.PhoneNumber)" />
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <InputTextArea id="content" @bind-Value="this.inputModel.Content" class="form-control" rows="8" placeholder="Message" />
                                <ValidationMessage For="@(() => this.inputModel.Content)" />
                            </div>
                        </div>
                        <div class="col-md-12 text-right">
                            <button type="submit" value="submit" class="btn submit_btn">
                                Submit Now
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public string ProductId { get; set; }

    private AddCommentInputModel inputModel = new AddCommentInputModel();
    private ICollection<CommentViewModel> allComments;

    protected override async Task OnInitializedAsync()
    {
        var username = this.HttpContextAccessor.HttpContext.User.Identity.Name;
        inputModel = await this.CommentService.ExtractCommentInformation(username, this.ProductId);
        allComments = await this.CommentService.GetAllComments(this.ProductId);
    }

    private async Task CreateComment()
    {
        inputModel.ProductId = this.ProductId;
        inputModel.Username = this.HttpContextAccessor.HttpContext.User.Identity.Name;

        await this.CommentService.AddComment(this.inputModel);
        this.inputModel.Content = string.Empty;
        allComments = await this.CommentService.GetAllComments(this.ProductId);
    }
}