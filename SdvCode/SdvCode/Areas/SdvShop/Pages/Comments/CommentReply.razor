@foreach (var reply in this.ReplyComments)
{
    <div class="review_item reply">
        <div class="media">
            <div class="d-flex">
                <img src="@reply.ImageUrl" class="commentAvatar" alt="avatar" />
            </div>
            <BSButton Color="@(this.collapses[reply.Id] == true ? Color.Danger : Color.Success)"
                      Size="Size.Small"
                      Class="btn-comment-circle"
                      OnClick="(() => this.onclick(reply.Id))">
                <i class="fas fa-caret-@(this.collapses[reply.Id] == true ? "up" : "down") comment-icon-collapse"></i>
            </BSButton>
            <div class="media-body">
                <h4>@reply.FullName</h4>
                @if (reply.Username != null)
                {
                    <span><a href="/Profile/@reply.Username">@@@reply.Username</a></span>
                }
                else
                {
                    <span><a>Anonymous</a></span>
                }
                @if (reply.UpdatedOn == null)
                {
                    <h5>@reply.CreatedOn.ToLocalTime().ToString("dd-MMMM-yyyy HH:mm tt")</h5>
                }
                else
                {
                    <h5>@reply.UpdatedOn?.ToLocalTime().ToString("dd-MMMM-yyyy HH:mm tt") (edited)</h5>
                }
                <a class="reply_btn" href="#">Reply</a>
            </div>
        </div>
        <p>@reply.Content</p>
    </div>

    <BSCollapse IsOpen="@this.collapses[reply.Id]">
        <CommentReply AllComments="this.AllComments"
                      ReplyComments="this.AllComments
                                 .Where(x => x.ParentId == reply.Id)
                                 .ToList()">
        </CommentReply>
    </BSCollapse>
}

@code {
    [Parameter]
    public ICollection<CommentViewModel> ReplyComments { get; set; }

    [Parameter]
    public ICollection<CommentViewModel> AllComments { get; set; }

    private Dictionary<string, bool> collapses = new Dictionary<string, bool>();

    protected override void OnInitialized()
    {
        foreach (var comment in this.ReplyComments)
        {
            collapses.Add(comment.Id, false);
        }
    }

    private void onclick(string id)
    {
        collapses[id] = !collapses[id];
        StateHasChanged();
    }
}