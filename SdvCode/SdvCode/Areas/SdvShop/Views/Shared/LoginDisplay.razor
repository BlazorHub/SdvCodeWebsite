<AuthorizeView>
    <Authorized>
        <li class="nav-item">
            <a href="#" class="icons">
                <i class="ti-search" aria-hidden="true"></i>
            </a>
        </li>

        <li class="nav-item">
            <a href="#" class="icons">
                <i class="ti-shopping-cart">@this.count</i>
            </a>
        </li>
        <li class="nav-item">
            <a href="/Profile/@context.User.Identity.Name" class="icons">
                <i class="ti-user" aria-hidden="true"></i>
            </a>
        </li>
        <li class="nav-item">
            <a href="#" class="icons">
                <i class="ti-heart" aria-hidden="true"></i>
            </a>
        </li>
    </Authorized>
    <NotAuthorized>
        <li class="nav-item">
            <a href="#" class="icons">
                <i class="ti-search" aria-hidden="true"></i>
            </a>
        </li>

        <li class="nav-item">
            <a href="#" class="icons">
                <i class="ti-shopping-cart">@this.count</i>
            </a>
        </li>
    </NotAuthorized>
</AuthorizeView>

@code {
    private int count = 0;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var items = await this.SessionStorage.GetItemAsync<List<AddedProductViewModel>>("CodeShop");

            if (items == null)
            {
                await this.SessionStorage.SetItemAsync("CodeShop", new List<AddedProductViewModel>());
            }
            else
            {
                this.count = items.Count;
                this.StateHasChanged();
            }
        }
        else
        {
            var items = await this.SessionStorage.GetItemAsync<List<AddedProductViewModel>>("CodeShop");
            this.count = items.Count;
        }
    }
}